generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id             String    @id @default(cuid())
  name           String
  email          String?   @unique
  password       String?
  emailVerfied   DateTime?
  image          String?
  role           String?   @default("user")
  accounts       Account[]
  sessions       Session[]
  posts          Post[]
  reactedPosts   Post[]    @relation("reactedPosts")
  supportedPosts Post[]    @relation("supportedPosts")
}

model Post {
  id             Int     @id @default(autoincrement())
  title          String
  content        String?
  published      Boolean @default(false)
  userId         String?
  authorId       String?
  author         User?   @relation(fields: [authorId], references: [id])
  reactedPosts   User[]  @relation("reactedPosts")
  supportedPosts User[]  @relation("supportedPosts")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId Int
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
